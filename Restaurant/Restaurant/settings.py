"""
Django settings for Restaurant project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i+7-g%9wze18xv-gysoydng)2v5=nw6gt_9a2*d_xvy4m3c+hz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #adding a rest framework to the installed apps is required
    'rest_framework',
    #to enable token creation
    'rest_framework.authtoken',
    #adding an app name is required to make the project use it
    'AppRestaurantAPI',
    #adding a djoser authentication library to the installed apps to make use of its auth endpoints
    'djoser',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Restaurant.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Restaurant.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

#Here we define the database we use primarily for the project and configure it with different parameters
DATABASES = {
    'default': {
        #Below we define which database gonna be used for our projects
        'ENGINE': 'django.db.backends.mysql',
        #The params below are defined at the moment of creation a user and database
        'NAME': 'TaigaRest',
        'HOST' : 'localhost',
        'USER' : 'root',
        'PASSWORD' : '09022000ep',
        'PORT' : '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



REST_FRAMEWORK = {
    #Below defines the filter methods available to us to use
    'DEFAULT_FILTER_BACKENDS': [
        'rest_framework.filters.OrderingFilter',
        'rest_framework.filters.SearchFilter',
    ],

    #This section provides the options for deafault authentication to our web app
    'DEFAULT_AUTHENTICATION_CLASSES': (
        #enables authentication with the built in token auth in django using rest framework lib
        'rest_framework.authentication.TokenAuthentication',
        #enables a djoser auth simultaniously with the standart auth method just line above
        'rest_framework.authentication.SessionAuthentication',
    ),
    #below is the pagination class that allows us to present limited info per page,e.g. when we wanna see only 2 records per page out of 1000
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    #defines how many records are displayed per page
    'PAGE_SIZE': 2
}


#Addin a Djoser section to our settings.py to use and customize
DJOSER = {
    #setting a login field as email (another option is email or phone number)
    "LOGIN_FIELD" : "username",
    #setting a primary key of User table to an email of a user
    "USER_ID_FIELD" : "email"





}